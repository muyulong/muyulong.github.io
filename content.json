{"meta":{"title":"Muyulong's Blog","subtitle":null,"description":"Just write something...","author":"muyulong","url":"https://mmyyll.ml"},"pages":[{"title":"about","date":"2018-07-24T21:20:32.000Z","updated":"2020-05-26T06:46:11.275Z","comments":false,"path":"about/index.html","permalink":"https://mmyyll.ml/about/index.html","excerpt":"","text":"关于博主牧鱼龙2000年来到地球，性别男，就读于某上过热搜的二本院校。性格类型：INTJ-T 5w4学生党、00后、伪技术宅、肥宅、穷对3C产品感兴趣，对IT兴趣浓厚，是一位成绩不佳的学生。关于博客2018年07月24日的深夜，这个博客诞生了。内容主要是一些技术博文和福利分享（虽然现在基本没什么内容）本博客运行于Coding，使用了Hexo作为博客框架，Sakura作为博客主题Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro，感谢hojun大佬","keywords":"关于"},{"title":"client","date":"2018-12-20T23:13:35.000Z","updated":"2020-05-26T06:46:11.275Z","comments":false,"path":"client/index.html","permalink":"https://mmyyll.ml/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"comment","date":"2018-12-20T23:13:48.000Z","updated":"2020-05-26T06:46:11.275Z","comments":true,"path":"comment/index.html","permalink":"https://mmyyll.ml/comment/index.html","excerpt":"","text":"念两句诗叙别梦、扬州一觉。【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"donate","date":"2018-12-20T23:13:05.000Z","updated":"2020-05-26T06:46:11.275Z","comments":false,"path":"donate/index.html","permalink":"https://mmyyll.ml/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"lab","date":"2019-01-05T21:47:59.000Z","updated":"2020-05-26T06:46:11.275Z","comments":false,"path":"lab/index.html","permalink":"https://mmyyll.ml/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"links","date":"2018-12-19T23:11:06.000Z","updated":"2020-05-26T06:46:11.275Z","comments":true,"path":"links/index.html","permalink":"https://mmyyll.ml/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"music","date":"2018-12-20T23:14:28.000Z","updated":"2020-05-26T06:46:11.275Z","comments":false,"path":"music/index.html","permalink":"https://mmyyll.ml/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"Gallery","date":"2018-01-05T00:00:00.000Z","updated":"2020-05-26T06:46:11.279Z","comments":false,"path":"pictures/index.html","permalink":"https://mmyyll.ml/pictures/index.html","excerpt":"","text":"","keywords":"图片"},{"title":"","date":"2020-05-26T06:46:40.063Z","updated":"2020-05-26T06:46:40.063Z","comments":true,"path":"pictures/photoslist.json","permalink":"https://mmyyll.ml/pictures/photoslist.json","excerpt":"","text":"[\"679.960 1.jpg\",\"679.960 2.jpg\",\"679.960 3.jpg\",\"679.960 4.jpg\",\"1448.2048 5.jpg\",\"1448.2048 6.jpg\",\"679.960 7.jpg\",\"1448.2048 8.jpg\"]"},{"title":"rss","date":"2018-12-20T23:09:03.000Z","updated":"2020-05-26T06:46:11.279Z","comments":true,"path":"rss/index.html","permalink":"https://mmyyll.ml/rss/index.html","excerpt":"","text":""},{"title":"说说","date":"2020-05-26T06:46:11.279Z","updated":"2020-05-26T06:46:11.279Z","comments":false,"path":"shuoshuo/index.html","permalink":"https://mmyyll.ml/shuoshuo/index.html","excerpt":"","text":"var img=\"https://cdn.jsdelivr.net/gh/muyulong/muyulong@V0.9/img/custom/avatar.png\",appID=\"s36F6BBszGKxEo1EbX4YaHD4-MdYXbMMI\",appKEY=\"N0PrGWjSCqNuvIASoNydma0Y\",per=\"5\",username=\"muyulong\",placeholder1=\"只有muyulong才能评论哦\",placeholder2=\"没有密码，不能评论！\",lazy=1,bgimg=\"https://gitee.com/cungudafa/source/blob/master/img/gif/katon/Totoro3.gif\""},{"title":"tags","date":"2018-12-12T22:14:16.000Z","updated":"2020-05-26T06:46:11.279Z","comments":true,"path":"tags/index.html","permalink":"https://mmyyll.ml/tags/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2019-01-04T22:53:25.000Z","updated":"2020-05-26T06:46:11.279Z","comments":false,"path":"theme-sakura/index.html","permalink":"https://mmyyll.ml/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"video","date":"2018-12-20T23:14:38.000Z","updated":"2020-05-26T06:46:11.279Z","comments":false,"path":"video/index.html","permalink":"https://mmyyll.ml/video/index.html","excerpt":"","text":"var videos=[{img:\"https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg\",title:\"朝花夕誓——于离别之朝束起约定之花\",status:\"已追完\",progress:100,jp:\"さよならの朝に約束の花をかざろう\",time:\"放送时间: 2018-02-24 SUN.\",desc:\" 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。\"},{img:\"https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg\",title:\"朝花夕誓——于离别之朝束起约定之花\",status:\"已追完\",progress:100,jp:\"さよならの朝に約束の花をかざろう\",time:\"2018-02-24 SUN.\",desc:\" 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。\"}].should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%}.should-ellipsis i{position:absolute;right:24px}.grey-text{color:#9e9e9e!important}.grey-text.text-darken-4{color:#212121!important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,:after,:before{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.12),0 1px 5px 0 rgba(0,0,0,.2);box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.12),0 1px 5px 0 rgba(0,0,0,.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,.2),0 6px 20px 0 rgba(0,0,0,.19);box-shadow:0 8px 17px 0 rgba(0,0,0,.2),0 6px 20px 0 rgba(0,0,0,.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right!important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:400;color:rgba(0,0,0,.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=radio]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=radio]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=radio]:not(:checked)+span:after,[type=radio]:not(:checked)+span:before{border-radius:50%}[type=radio]:not(:checked)+span:after,[type=radio]:not(:checked)+span:before{border:2px solid #5a5a5a}[type=radio]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=checkbox]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=checkbox]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,.42)}[type=checkbox].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=checkbox].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0;z-index:0}input[type=checkbox]:not(:disabled).tabbed:focus~.lever::before,input[type=checkbox]:not(:disabled)~.lever:active:before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,.26);box-shadow:0 0 0 10px rgba(38,166,154,.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,.26)}番组计划这里将是永远的回忆window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"},{"title":"bangumi","date":"2019-02-10T21:32:48.000Z","updated":"2020-05-26T06:46:11.275Z","comments":false,"path":"bangumi/index.html","permalink":"https://mmyyll.ml/bangumi/index.html","excerpt":"","text":"","keywords":null}],"posts":[{"title":"没有从天而降的英雄，只有挺身而出的凡人","slug":"抗击疫情","date":"2020-04-04T00:00:01.000Z","updated":"2020-05-26T06:46:11.275Z","comments":true,"path":"post/47025b01.html","link":"","permalink":"https://mmyyll.ml/post/47025b01.html","excerpt":"","text":"想起疫情发生以来网上广为流传的两句话：一句是，“中国人总是被他们之中最勇敢的人保护得很好。”另一句是，“中国人中有最真诚的爱国主义者，他们是在最崎岖处接引这个民族渡过一切苦海的纤夫。”语言与现实，如此严丝合缝。在这场全民战“疫”中，挺身而出的白衣战士数以万计，参与防控工作的基层党员、社区干部、志愿者多不胜数，还有发挥重要作用、提供各种保障的新闻工作者、快递小哥、垃圾清运工等，都在以自己的方式履职尽责、竭尽所能，让世界看到了今日中国依然拥有“为有牺牲多壮志，敢教日月换新天”的遍地英雄。无论是希望人们在若干年后依然记得“在疫情肆虐的时候，中国的医护没有退缩，这样的医护值得信赖”，还是用行动实现“把汶川地震时得到的爱传递下去”的心愿……无数个体在“最危险的时候”的无所畏惧、舍我其谁，共同勾勒成中华民族代代相传、生生不息的英雄图谱。本文转载自新浪网,作者中国新闻网,【编辑:王诗尧】,有删改","categories":[{"name":"转载","slug":"转载","permalink":"https://mmyyll.ml/categories/转载/"}],"tags":[{"name":"疫情","slug":"疫情","permalink":"https://mmyyll.ml/tags/疫情/"}],"keywords":[{"name":"转载","slug":"转载","permalink":"https://mmyyll.ml/categories/转载/"}]},{"title":"开往-Travelling","slug":"开往-友链接力","date":"2020-03-17T22:14:19.000Z","updated":"2020-05-26T06:46:11.275Z","comments":true,"path":"post/aca9eb9b.html","link":"","permalink":"https://mmyyll.ml/post/aca9eb9b.html","excerpt":"","text":"互联网将人与人之间的距离大大减小，却还是形成了大大小小的孤岛。只有熟人间才知道彼此，而陌生人永远只能是陌生人。什么是开往-友链接力想法来自 https://github.com/XXIIVV/webring互联网经历了一个封闭到开放，现在逐渐又走向封闭的过程。大大小小的孤岛散落在浩瀚烟海，来往就像是一颗颗星球之间的快速列车，随机的跳向下一站。我想在这这烟海发现下一颗星。开往-友链助力是传统友链的增强，我们不必互相知道了解彼此，标准的审查让友好的朋友加入我们，只需要一个徽标，占用一块位置，我们所有人都联系在了一起，简单而又强大。和我一起加入开往开往这是项目的Github地址，在issue中提交申请，几日内就会受理。但是申请的网站必须满足几点要求：愿为开放的网络做出贡献（如分享知识经验设计等）；没有违法以及影响体验的内容（如侵入式广告等）；正常更新维护中（国内无法正常访问会被移除）；强制启用 https 。下面就是通向异域的按钮。“开往”取自“开放的网络”。将开往的徽标插入您的网站，表示您支持开放的网络。※ ps：我用的logo是随便用ps抄了一个，想要的话随便用，我没有版权。。。本文转载自致远博客,文章地址,有删改","categories":[{"name":"转载","slug":"转载","permalink":"https://mmyyll.ml/categories/转载/"}],"tags":[{"name":"友链","slug":"友链","permalink":"https://mmyyll.ml/tags/友链/"},{"name":"博客","slug":"博客","permalink":"https://mmyyll.ml/tags/博客/"}],"keywords":[{"name":"转载","slug":"转载","permalink":"https://mmyyll.ml/categories/转载/"}]},{"title":"记一次耳机充电盒烧毁事故牵扯出来的一堆琐事","slug":"记一次耳机充电盒烧毁事故","date":"2020-03-06T21:55:19.000Z","updated":"2020-05-26T06:46:11.275Z","comments":true,"path":"post/3a2c9878.html","link":"","permalink":"https://mmyyll.ml/post/3a2c9878.html","excerpt":"","text":"因为我不是HiFi发烧友，所以耳机这个东西我一直觉得很玄学。去年，网上有一款TWS耳机爆火，就是这个jeet air plus。俗话说，文采越好，音质越高。看到网上大片大片的评测文章以及无数赞誉，我一个哥们就入手了这副耳机，用了一段时候后，优惠价出给了我，我就心安理得的用起来了。没想到，前几天我给耳机盒充电的时候，用了倍思的65w氮化镓2c1a充电头。我以为没啥事，直接用，结果耳机盒的充电板直接烧掉了黑色的芯片被烧得看不清上面的丝印，旁边的贴片电容和贴片电阻貌似都烧毁了，板子上的走线也不知道情况怎么样，这直接打消了我妄想在万能的某宝上淘一片换上的念头。但是还是能勉强看到上面有65b92*的字样，我在多个网站上查询，最后确定为首鼎半導體生产的SD8065充电ic的马甲。在闲鱼花费了80元重金之后，我拿到了这个号称被狗咬过，低价出售的耳机盒通过拆解发现，里面的电路板上的充电ic丝印为65b919猜测可能是同一个型号的不同批次通过查询首鼎的产品资料，发现这片充电ic最高支持8V，0.6A而倍思的充电头显然电压和电流都不合适，这也是导致耳机盒烧毁的原因。絮絮叨叨写了一点姑且可以称为文字的东西，也就是吐槽一下自己因为使用不当造成事故，顺便警醒一下自己。。","categories":[{"name":"技术","slug":"技术","permalink":"https://mmyyll.ml/categories/技术/"}],"tags":[{"name":"耳机","slug":"耳机","permalink":"https://mmyyll.ml/tags/耳机/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"https://mmyyll.ml/categories/技术/"}]},{"title":"Java实验报告实验题","slug":"Java实验报告实验题","date":"2019-12-11T20:55:19.000Z","updated":"2020-05-26T06:46:11.275Z","comments":true,"path":"post/1c731b77.html","link":"","permalink":"https://mmyyll.ml/post/1c731b77.html","excerpt":"","text":"实验 1生成一个日历类，输入日期后能正确输出对应的星期。例如，输入 2019,12,10 应能正确输出 星期二 。public class CalculateWeekDay{ public static void CalculateWeekDay(int y, int m, int d) { if(m &lt; 1 || m &gt;12){ System.out.println(&quot;你输入的月份不再范围内，请重新输入！&quot;); } if (m == 1 || m == 2) { m += 12; y--; } int iWeek = (d + 2 * m + 3 * (m + 1) / 5 + y + y / 4 - y / 100 + y / 400) % 7; switch (iWeek) { case 0: System.out.println(&quot;星期一\\n&quot;); break; case 1: System.out.println(&quot;星期二\\n&quot;); break; case 2: System.out.println(&quot;星期三\\n&quot;); break; case 3: System.out.println(&quot;星期四\\n&quot;); break; case 4: System.out.println(&quot;星期五\\n&quot;); break; case 5: System.out.println(&quot;星期六\\n&quot;); break; case 6: System.out.println(&quot;星期日\\n&quot;); break; } } public static void main(String args[]) { CalculateWeekDay(2019, 12, 11); } } 实验 2使用递归计算出 12345…..30 的值并输出，使用递归计算 1+2+3+4+5+…..+1000 的值并输出。public class DiGui { public static int jicheng(int n) { if(n==1||n==0) return n; else return n*jicheng(n-1); } public static int count(int n) { if(n==1||n==0) return n; else return n+count(n-1); } public static void main(String[] args) { System.out.println(&quot;1*2*3*4*5*.....*30=&quot;+count(30)); System.out.println(&quot;1+2+3+4+5+.....+1000=&quot;+count(1000)); } } 实验 3给定数组 1,5,3,7,11,6,13,9,8，找出该数组的最大值，求出该数组的平均值，对该数组求和并求出数组长度。public class FindMax { public static void main(String[] args) { int[] arr= {1,5,3,7,11,6,13,9,8}; int max=arr[0]; int sum=0; float avg=0; for(int i=1;i&lt;arr.length;i++) { if(arr[i]&gt;max) max=arr[i]; sum+=arr[i]; } avg=sum/arr.length; System.out.println(&quot;max=&quot;+max); System.out.println(&quot;sum=&quot;+sum); System.out.println(&quot;avg=&quot;+avg); System.out.println(&quot;arr.length=&quot;+arr.length); } } 实验 4第 3 章课后习题 103 页第五大题编程题 1class Student{ private String name; private double grade; public Student() { } public Student(String name,double grade) { this.name=name; this.grade=grade; } public String getName() { return name; } public void setName(String name) { this.name=name; } public double getGrade() { return grade; } public void setGrade(double grade) { this.grade=grade; } } public class Test { public static void main(String[]args) { Student stu1=new Student(); stu1.setName(&quot;zhangsan&quot;); stu1.setGrade(99); Student stu2=new Student(); stu2.setName(&quot;Li&quot;); stu2.setGrade(100); } } 实验 5第 4 章课后习题 153 页第五大题编程题 1/*Student.java*/ public class Student { public String name; public int age; public Student(String name,int age) { this.name=name; this.age=age; } public void show(){ System.out.println(&quot;name: &quot;+name+&quot; age: &quot;+age); } } /*UnderGraduate.java*/ public class UnderGraduate extends Student{ public String degree; public UnderGraduate(String name,int age,String degree){ super(name, age); this.degree=degree;} public void show(){ System.out.println(&quot;name: &quot;+name+&quot; age: &quot;+age+&quot; degree: &quot;+degree); } } /*Test01.java*/ public class Test01{ public static void main(String[] args) { Student student = new Student(&quot;丽丽&quot;, 16); student.show(); UnderGraduate underGraduate = new UnderGraduate(&quot;爱敬&quot;, 30, &quot;bechalor&quot;); underGraduate.show(); } } 第 4 章课后习题 153 页第五大题编程题 2/*Shape.java*/ public abstract class Shape { public abstract double area(); public abstract String getType(); public Shape(){}; } /*Circle.java*/ public class Circle extends Shape{ private double radius; public Circle(double radius) { // TODO Auto-generated method stub this.radius=radius; } public double area() { // TODO Auto-generated method stub return radius*radius*3.14; } public String getType() { // TODO Auto-generated method stub return &quot;circle&quot;; } public void show() { System.out.println(&quot;Type: &quot;+getType()+&quot; radius: &quot;+radius+&quot; area: &quot;+area()); } } /*Square.java*/ public class Square extends Shape{ private double length; public Square(double length) { // TODO Auto-generated method stub this.length=length; } public double area() { // TODO Auto-generated method stub return length*length; } public String getType() { // TODO Auto-generated method stub return &quot;square&quot;; } public void show() { System.out.println(&quot;Type: &quot;+getType()+&quot; length: &quot;+length+&quot; area: &quot;+area()); } } /*test2.java*/ public class test2 { public static void main(String[] args) { Square s1 = new Square(2); s1.show(); Circle c1 = new Circle(3); c1.show(); } } 实验 6第 10 章课后习题 387 页第五大题编程题 1public class Test01 { public static void main(String[] args) { Teacher t = new Teacher(); new Thread(t, &quot;陈老师&quot;).start(); new Thread(t, &quot;高老师&quot;).start(); new Thread(t, &quot;李老师&quot;).start(); } } class Teacher implements Runnable { private int notes = 80; public void run() { while (true) { dispatchNotes(); // 调用售票方法 if (notes &lt;= 0) { break; } } } private synchronized void dispatchNotes() { if (notes &gt; 0) { try { Thread.sleep(10); // 经过的线程休眠10毫秒 } catch (InterruptedException e) { e.printStackTrace(); } System.out.println(Thread.currentThread().getName() + &quot;---发出的笔记&quot; + notes--); } } }","categories":[{"name":"技术","slug":"技术","permalink":"https://mmyyll.ml/categories/技术/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://mmyyll.ml/tags/教程/"},{"name":"Java","slug":"Java","permalink":"https://mmyyll.ml/tags/Java/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"https://mmyyll.ml/categories/技术/"}]},{"title":"乐视插线板简单开箱","slug":"乐视插线板简单开箱","date":"2019-07-24T23:55:19.000Z","updated":"2020-05-26T06:46:11.275Z","comments":true,"path":"post/67448675.html","link":"","permalink":"https://mmyyll.ml/post/67448675.html","excerpt":"上了一年大学，添置了不少电子产品，原本的公牛插线板完全不够用，于是便萌生了再买一个插线板的念头。","text":"上了一年大学，添置了不少电子产品，原本的公牛插线板完全不够用，于是便萌生了再买一个插线板的念头。考虑到我的大多数电子产品都是usb供电，所以我需要一个带usb接口的插线板。正好在朋友圈看到有人在卖乐视插线板，查了一下，官网要199元，在他这儿买只要85元。直接下单，走流程。。。①包装快递到手，拆开，包装比较简洁。正面是类似浮雕的一个插线板，下方一个logo拆开包装，里面一张说明书，下面就是插线板了。②外观外观其实没什么好说的，颜值党应该会喜欢吧。背面说明了这是一个2500W的插线板。上方有一个挺大的收纳盒，这个收纳盒官网说是阻燃的，能耐得住750℃的高温。。。插线板后面有一个开关，这个按钮按了十分解压。③功能这个插线板有4个usb接口，可以给usb设备供电，最右边的接口支持QC快充这个简单的开箱就先到这里结束了，第一次写开箱，写的太烂了。。。","categories":[{"name":"技术","slug":"技术","permalink":"https://mmyyll.ml/categories/技术/"}],"tags":[{"name":"开箱","slug":"开箱","permalink":"https://mmyyll.ml/tags/开箱/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"https://mmyyll.ml/categories/技术/"}]},{"title":"linux安装与初步使用","slug":"linux安装与初步使用","date":"2019-02-26T22:33:17.000Z","updated":"2020-05-26T06:46:11.275Z","comments":true,"path":"post/13822.html","link":"","permalink":"https://mmyyll.ml/post/13822.html","excerpt":"linux安装与初步使用ppt下载","text":"linux安装与初步使用ppt下载点击下载","categories":[{"name":"资源","slug":"资源","permalink":"https://mmyyll.ml/categories/资源/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://mmyyll.ml/tags/教程/"},{"name":"blog","slug":"blog","permalink":"https://mmyyll.ml/tags/blog/"},{"name":"hexo","slug":"hexo","permalink":"https://mmyyll.ml/tags/hexo/"}],"keywords":[{"name":"资源","slug":"资源","permalink":"https://mmyyll.ml/categories/资源/"}]},{"title":"Hexo-NexT/Sakura 博客添加相册功能总结","slug":"Hexo-NexT_Sakura 博客添加相册功能总结","date":"2018-12-13T18:01:02.000Z","updated":"2020-05-26T06:46:11.275Z","comments":true,"path":"post/413b2321.html","link":"","permalink":"https://mmyyll.ml/post/413b2321.html","excerpt":"","text":"想要在自己的博客里添加一个相册功能，可以放一些照片进去展示。当时我使用的是hexo-NexT主题，所以所有的操作都是在这个主题下完成的。但是当我将博客的主题换成hexo-Sakura时，我需要再次添加这个功能。hexo-NexT以下，是在hexo-NexT主题下的操作过程。参考的教程链接：https://www.sunhome.org.cn/2018/09/29/hexophotos/https://asdfv1929.github.io/2018/05/26/next-add-photos/看过上面的教程后，我们总结一下：1.在博客根目录的 /scripts/文件夹下新建一个phototool.js文件&quot;use strict&quot;; const fs = require(&quot;fs&quot;); const sizeOf = require(&#39;image-size&#39;); //本地照片所在目录 const path = &quot;source/photos/images&quot;; //要放置生成的照片信息文件目录，建议直接放在 source/photos/ 文件夹下 const output = &quot;source/photos/photoslist.json&quot;; var dimensions; fs.readdir(path, function (err, files) { if (err) { return; } let arr = []; (function iterator(index) { if (index == files.length) { fs.writeFileSync(output, JSON.stringify(arr, null, &quot;\\t&quot;)); return; } fs.stat(path + &quot;/&quot; + files[index], function (err, stats) { if (err) { return; } if (stats.isFile()) { dimensions = sizeOf(path + &quot;/&quot; + files[index]); console.log(dimensions.width, dimensions.height); arr.push(dimensions.width + &#39;.&#39; + dimensions.height + &#39; &#39; + files[index]); } iterator(index + 1); }) }(0)); }); 2.在 /themes/next/source/js/src/ 目录下创建一个photo.js，内容如下： photo ={ page: 1, //offset 用于设置照片数量的上限 offset: 100, init: function () { var that = this; //这里设置的是刚才生成的 json 文件路径 $.getJSON(&quot;/photos/photoslist.json&quot;, function (data) { that.render(that.page, data); //that.scroll(data); }); }, render: function (page, data) { var begin = (page - 1) * this.offset; var end = page * this.offset; if (begin &gt;= data.length) return; var html, imgNameWithPattern, imgName, imageSize, imageX, imageY, li = &quot;&quot;; for (var i = begin; i &lt; end &amp;&amp; i &lt; data.length; i++) { imgNameWithPattern = data[i].split(&#39; &#39;)[1]; imgName = imgNameWithPattern.split(&#39;.&#39;)[0] imageSize = data[i].split(&#39; &#39;)[0]; imageX = imageSize.split(&#39;.&#39;)[0]; imageY = imageSize.split(&#39;.&#39;)[1]; //这里 250 指的是图片的宽度，可以根据自己的需要调整相册中照片的大小 li += &#39;&lt;div class=&quot;card&quot; style=&quot;width:250px&quot;&gt;&#39; + &#39;&lt;div class=&quot;ImageInCard&quot; style=&quot;height:&#39;+ 250 * imageY / imageX + &#39;px&quot;&gt;&#39; + //href 和 src 的链接地址是相册照片外部链接，也可以放博客目录里 &#39;&lt;a data-fancybox=&quot;gallery&quot; href=&quot;/photos/images/&#39; + imgNameWithPattern + &#39;?raw=true&quot; data-caption=&quot;&#39; + imgName + &#39;&quot;&gt;&#39; + &#39;&lt;img src=&quot;/photos/images/&#39; + imgNameWithPattern + &#39;?raw=true&quot;/&gt;&#39; + &#39;&lt;/a&gt;&#39; + &#39;&lt;/div&gt;&#39; + // &#39;&lt;div class=&quot;TextInCard&quot;&gt;&#39; + imgName + &#39;&lt;/div&gt;&#39; + //图片下显示文件名作为说明的功能 &#39;&lt;/div&gt;&#39; } $(&quot;.ImageGrid&quot;).append(li); $(&quot;.ImageGrid&quot;).lazyload(); this.minigrid(); }, minigrid: function() { var grid = new Minigrid({ container: &#39;.ImageGrid&#39;, item: &#39;.card&#39;, gutter: 12 }); grid.mount(); $(window).resize(function() { grid.mount(); }); } } photo.init(); minigrid.min.js 可以 下载 获得，放在同样的目录下。然后如果指向让两个文件在相册页加载，需要修改 /themes/next/layout/_scripts/commons.swig为以下内容，这里的判断语句表示如果页面的类型是 picture就加载minigrid.min.js 和 photo.js{% if page.type ==='picture' %} {% set js_commons = [ 'src/utils.js', 'src/motion.js', 'src/minigrid.min.js', 'src/photo.js', 'src/canvasline.js' ] %} {% else %} {% set js_commons = [ 'src/utils.js', 'src/motion.js', 'src/canvasline.js' ] %} {% endif %} {% for common in js_commons %} {% endfor %} 3.在/themes/next/source/css/_custom/custom.styl添加以下内容//相册样式 .ImageGrid { width: 100%; max-width: 1040px; margin: 0 auto; text-align: center; } .card { overflow: hidden; transition: .3s ease-in-out; border-radius: 8px; background-color: #ddd; } .ImageInCard img { padding: 0 0 0 0; border-radius: 8px; } 4.开启 lazyload和 fancyboxHexo-lazy-image使用安装步骤：npm install hexo-lazyload-image --save然后修改_config.yml文件lazyload: enable: true onlypost: false loadingImg: # eg. ./images/loading.png 安装fancybox$ cd themes/next $ ls bower.json _config.yml docs gulpfile.coffee languages layout LICENSE.md package.json README.md scripts source test 输入$ git clone https://github.com/theme-next/theme-next-fancybox3 source/lib/fancybox 在主题配置文件_config.yml里编辑：fancybox: true 4.相册文件夹hexo/source/下建立photos文件夹,里面新建index.md文件，添加--- title: photos date: xxxx-xx-xx xx:xx:xx//自己编辑 type: picture --- &lt;div class=&quot;ImageGrid&quot;&gt;&lt;/div&gt; 在博客根目录的配置文件里启用post_asset_folderpost_asset_folder: true 之后，添加照片，hexo d -g就能在自己的博客里看到了。总结完毕hexo-Sakura与NexT主题不同，Sakura主题使用了EJS引擎，这使得上面的部分代码需要做一些修改。与之前的步骤相同，在博客根目录的 /scripts/文件夹下新建一个phototool.js文件。phototool.js文件中的路径部分需要填写正确，否则会报错/无法访问。minigrid.min.js 和 photo.js这两个文件需要放置在/themes/Sakura/source/js/目录中，且photo.js中关于文件路径的部分需配置正确。在/themes/Sakura/source/css目录中新建pictures.css，写入以下内容//相册样式 .ImageGrid { width: 100%; max-width: 1040px; margin: 0 auto; text-align: center; } .card { overflow: hidden; transition: .3s ease-in-out; border-radius: 8px; background-color: #ddd; } .ImageInCard img { padding: 0 0 0 0; border-radius: 8px; } 开启 lazyloadgit bash中输入npm install hexo-lazyload-image --save然后修改_config.yml文件lazyload: enable: true onlypost: false loadingImg: # eg. ./images/loading.png 由于Hexo-Sakura自带了fancybox，所以无需再次安装。在hexo/source/目录下建立pictures文件夹,里面新建index.md文件，添加--- title: Gallery date: xxxx-xx-xx xx:xx:xx//自己编辑 layout: pictures comments: false --- 在/themes/Sakura/source/layout目录中新建pictures.ejs，写入以下内容&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/pictures.css&quot;&gt; &lt;script src=&quot;https://code.jquery.com/jquery-3.1.1.min.js&quot;&gt;&lt;/script&gt; &lt;div class=&quot;pattern-center-blank&quot;&gt;&lt;/div&gt; &lt;div id=&quot;content&quot; class=&quot;site-content&quot;&gt; &lt;article class=&quot;post-item post-301 page type-page status-publish has-post-thumbnail hentry&quot;&gt; &lt;header class=&quot;page-header&quot;&gt;&lt;h1 class=&quot;cat-title&quot;&gt;图集 | 相册&lt;/h1&gt; &lt;span class=&quot;cat-des&quot;&gt;&lt;p&gt;这里将是永远的回忆&lt;/p&gt; &lt;/span&gt;&lt;/header&gt; &lt;div class=&quot;ImageGrid&quot;&gt;&lt;/div&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;/js/minigrid.min.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;/js/photo.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt; &lt;/article&gt; &lt;/div&gt; 最后，在博客根目录的配置文件里启用post_asset_folderpost_asset_folder: true 添加照片，hexo d -g就能看到图片了","categories":[{"name":"技术","slug":"技术","permalink":"https://mmyyll.ml/categories/技术/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://mmyyll.ml/tags/教程/"},{"name":"blog","slug":"blog","permalink":"https://mmyyll.ml/tags/blog/"},{"name":"hexo","slug":"hexo","permalink":"https://mmyyll.ml/tags/hexo/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"https://mmyyll.ml/categories/技术/"}]},{"title":"论如何给没有人气的博客加上看板娘","slug":"论如何给没有人气的博客加上看板娘","date":"2018-09-03T13:20:43.000Z","updated":"2020-05-26T06:46:11.275Z","comments":true,"path":"post/22438.html","link":"","permalink":"https://mmyyll.ml/post/22438.html","excerpt":"","text":"2018-09-03：等想好了再写吧。。。2019-12-03：我一定会写的！2020-03-06：咕咕咕咕咕咕咕咕咕咕咕咕","categories":[{"name":"技术","slug":"技术","permalink":"https://mmyyll.ml/categories/技术/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://mmyyll.ml/tags/教程/"},{"name":"blog","slug":"blog","permalink":"https://mmyyll.ml/tags/blog/"},{"name":"hexo","slug":"hexo","permalink":"https://mmyyll.ml/tags/hexo/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"https://mmyyll.ml/categories/技术/"}]},{"title":"第一篇博文-使用hexo+coding/github搭建个人静态博客的心得","slug":"第一篇博文","date":"2018-07-24T21:55:19.000Z","updated":"2020-05-26T06:46:11.275Z","comments":true,"path":"post/12424.html","link":"","permalink":"https://mmyyll.ml/post/12424.html","excerpt":"Hexo是一个开源的静态博客框架，支持markdown文档，应用起来很方便而且有丰富的主题模板可供选择，是建立个性化的个人博客的不二之选。以下以Coding+hexo为例搭建个人博客.因为GitHub在国内访问速度较慢，因此选择Coding，但是在GitHub上搭建的步骤也是大同小异的。","text":"Hexo是一个开源的静态博客框架，支持markdown文档，应用起来很方便而且有丰富的主题模板可供选择，是建立个性化的个人博客的不二之选。以下以Coding+hexo为例搭建个人博客.因为GitHub在国内访问速度较慢，因此选择Coding，但是在GitHub上搭建的步骤也是大同小异的。1.准备工作有一个github账号或coding账号，没有的话去注册一个；安装了node.js、npm，并了解相关基础知识；安装了git for windows（或者其它git客户端）本文所使用的环境：Windows10node.js@8.11.3git@ 2.18.0.windows.1hexo@hexo-cli: 1.1.02.开始搭建2.1 github创建仓库githubcoding新建一个仓库，仓库名为 你的用户名.github.io或者 你的用户名.coding.me详细说明见创建仓库（coding同理）2.2 配置SSH Key打开 Git bash 输入：$ cd ~/. ssh #检查本机已存在的ssh密钥 如果提示：No such file or directory 说明你是第一次使用git。继续输入：ssh-keygen -t rsa -C &quot;邮件地址&quot; 然后一路回车，如果要输入yes/no，输入yes接着打开github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：然后使用：$ ssh -T git@github.com # 注意邮箱地址不用改 测试是否成功如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：Hi yourname! You&#39;ve successfully authenticated, but GitHub does not provide shell access. 看到这个信息说明SSH已配置成功！此时你还需要配置：$ git config --global user.name &quot;liuxianan&quot;// 你的github用户名，非昵称 $ git config --global user.email &quot;xxx@qq.com&quot;// 填写你的github注册邮箱 详细说明见配置ssh-key2.3 使用hexo博客Hexo是一个简单、快速、强大的基于 Github Pages 的博客发布工具，支持Markdown格式，有众多优秀插件和主题。使用hexo写博客2.4 安装注意事项$ npm install -g hexo 新建一个hexo作为存放代码的地方，在Git bash中进入该文件夹$ cd /f/Workspaces/hexo/ $ hexo init 等待hexo自动下载完成$ hexo g # 生成 $ hexo s # 启动服务 hexo s是开启本地预览服务，打开浏览器访问 http://localhost:4000 即可看到内容详细说明2.5 主题主题文件位于hexo文件夹中的themes文件夹内，官方主题详细说明2.6 上传到github/coding配置_config.yml中有关deploy的部分：deploy: type: git repository: git@github.com:muyulong/muyulong.github.io.git branch: master (coding需将repository修改为`git@git.coding.net:muyulong/muyulong.coding.me.git`)还需要安装一个插件：npm install hexo-deployer-git --save 建议直接npm install 开始上传：hexo d 3.总结详细说明常见命令hexo new &quot;postName&quot; #新建文章 hexo new page &quot;pageName&quot; #新建页面 hexo generate #生成静态页面至public目录 hexo server #开启预览访问端口（默认端口4000，&#39;ctrl + c&#39;关闭server） hexo deploy #部署到GitHub hexo help # 查看帮助 hexo version #查看Hexo的版本 缩写：hexo n == hexo new hexo g == hexo generate hexo s == hexo server hexo d == hexo deploy 组合命令：hexo s -g #生成并本地预览 hexo d -g #生成并上传 参考https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.htmlhttp://www.cnblogs.com/zhcncn/p/4097881.htmlhttp://www.jianshu.com/p/05289a4bc8b2本文转载于小茗同学的博客园文章地址：https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html","categories":[{"name":"技术","slug":"技术","permalink":"https://mmyyll.ml/categories/技术/"}],"tags":[{"name":"教程","slug":"教程","permalink":"https://mmyyll.ml/tags/教程/"},{"name":"blog","slug":"blog","permalink":"https://mmyyll.ml/tags/blog/"},{"name":"hexo","slug":"hexo","permalink":"https://mmyyll.ml/tags/hexo/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"https://mmyyll.ml/categories/技术/"}]}]}